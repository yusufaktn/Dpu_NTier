// <auto-generated />
using System;
using DataAccessLayer.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250512092110_New-Create")]
    partial class NewCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EntiityLayer.Models.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("EntiityLayer.Models.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EntiityLayer.Models.AppUserRole", b =>
                {
                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("RoleId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("KullaniciRole", (string)null);
                });

            modelBuilder.Entity("EntiityLayer.Models.Bolum", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BolumAd")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("FakulteID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("FakulteID");

                    b.ToTable("Bolumler", (string)null);
                });

            modelBuilder.Entity("EntiityLayer.Models.DersNotu", b =>
                {
                    b.Property<Guid>("DersNotuID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DersID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DosyaYolu")
                        .IsRequired()
                        .HasColumnType("varchar(MAX)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("NotBaslıgı")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("OgretmenID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("YuklemeTarih")
                        .HasColumnType("datetime2");

                    b.HasKey("DersNotuID");

                    b.HasIndex("DersID");

                    b.HasIndex("OgretmenID");

                    b.ToTable("DersNotu", (string)null);
                });

            modelBuilder.Entity("EntiityLayer.Models.Dersler", b =>
                {
                    b.Property<Guid>("DersID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BolumID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DersAd")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Donem")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DersID");

                    b.HasIndex("BolumID");

                    b.ToTable("Dersler", (string)null);
                });

            modelBuilder.Entity("EntiityLayer.Models.Fakulte", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FakülteAd")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<Guid>("UniversiteID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("UniversiteID");

                    b.ToTable("Fakulte", (string)null);
                });

            modelBuilder.Entity("EntiityLayer.Models.Ogretmen", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Eposta")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Ogretmenler", (string)null);
                });

            modelBuilder.Entity("EntiityLayer.Models.OgretmenDersler", b =>
                {
                    b.Property<Guid>("OgretmenID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DersID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AktifMi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DonemYil")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("OgretmenID", "DersID");

                    b.HasIndex("DersID");

                    b.ToTable("OgretmenDersler", (string)null);
                });

            modelBuilder.Entity("EntiityLayer.Models.Universite", b =>
                {
                    b.Property<Guid>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("UniversiteAd")
                        .IsRequired()
                        .HasColumnType("varchar(80)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Universiteler");
                });

            modelBuilder.Entity("EntiityLayer.Models.AppUserRole", b =>
                {
                    b.HasOne("EntiityLayer.Models.AppRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntiityLayer.Models.AppUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EntiityLayer.Models.Bolum", b =>
                {
                    b.HasOne("EntiityLayer.Models.Fakulte", "Fakulte")
                        .WithMany("Bolumler")
                        .HasForeignKey("FakulteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fakulte");
                });

            modelBuilder.Entity("EntiityLayer.Models.DersNotu", b =>
                {
                    b.HasOne("EntiityLayer.Models.Dersler", "Ders")
                        .WithMany("DersNotlar")
                        .HasForeignKey("DersID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntiityLayer.Models.Ogretmen", "Ogretmen")
                        .WithMany("DerslerNotlari")
                        .HasForeignKey("OgretmenID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ders");

                    b.Navigation("Ogretmen");
                });

            modelBuilder.Entity("EntiityLayer.Models.Dersler", b =>
                {
                    b.HasOne("EntiityLayer.Models.Bolum", "Bolum")
                        .WithMany("Dersler")
                        .HasForeignKey("BolumID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bolum");
                });

            modelBuilder.Entity("EntiityLayer.Models.Fakulte", b =>
                {
                    b.HasOne("EntiityLayer.Models.Universite", "Universite")
                        .WithMany("Fakulteler")
                        .HasForeignKey("UniversiteID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Universite");
                });

            modelBuilder.Entity("EntiityLayer.Models.OgretmenDersler", b =>
                {
                    b.HasOne("EntiityLayer.Models.Dersler", "Ders")
                        .WithMany("OgretmenDersleriAtanan")
                        .HasForeignKey("DersID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntiityLayer.Models.Ogretmen", "Ogretmen")
                        .WithMany("OgretmenDersleri")
                        .HasForeignKey("OgretmenID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ders");

                    b.Navigation("Ogretmen");
                });

            modelBuilder.Entity("EntiityLayer.Models.Bolum", b =>
                {
                    b.Navigation("Dersler");
                });

            modelBuilder.Entity("EntiityLayer.Models.Dersler", b =>
                {
                    b.Navigation("DersNotlar");

                    b.Navigation("OgretmenDersleriAtanan");
                });

            modelBuilder.Entity("EntiityLayer.Models.Fakulte", b =>
                {
                    b.Navigation("Bolumler");
                });

            modelBuilder.Entity("EntiityLayer.Models.Ogretmen", b =>
                {
                    b.Navigation("DerslerNotlari");

                    b.Navigation("OgretmenDersleri");
                });

            modelBuilder.Entity("EntiityLayer.Models.Universite", b =>
                {
                    b.Navigation("Fakulteler");
                });
#pragma warning restore 612, 618
        }
    }
}
